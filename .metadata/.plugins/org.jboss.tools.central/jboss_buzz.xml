<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Sabre chooses Red Hat OpenShift for cloud-native DevOps platform</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/z3OJyzhe9GM/" /><category term="Announcement" /><category term="Cloud" /><category term="Red Hat OpenShift Container Platform" /><category term="cloud" /><category term="cloud native" /><category term="DevOps" /><category term="microservices" /><category term="Red Hat Customers" /><category term="Sabre" /><author><name>Mike Guerette</name></author><id>https://developers.redhat.com/blog/?p=510467</id><updated>2018-07-25T15:50:45Z</updated><published>2018-07-25T15:50:45Z</published><content type="html">&lt;p&gt;As part of its strategy to re-imagine the business of travel, Sabre Corporation today announced that it will leverage &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; as the foundation for its Next Generation Platform initiative. OpenShift will be the basis of a modern architecture that includes microservices, development and operations (DevOps), and a multi-faceted cloud strategy to lead an industry evolution in the future of retailing, distribution, and fulfillment through innovative technology. OpenShift, built on containers and Kubernetes, is the the industry&amp;#8217;s leading enterprise Kubernetes platform for running existing and cloud-native applications in any cloud.&lt;/p&gt; &lt;p&gt;&amp;#8220;The Next Generation Platform is the cornerstone of Sabre&amp;#8217;s long-term technology strategy,&amp;#8221; said Vish Saoji, Sabre CTO. &amp;#8220;Red Hat has delivered the enterprise-hardened software environment we need to help drive our technology transformation, and this collaboration allows us to build upon that architecture and execute our plan.&amp;#8221;&lt;span id="more-510467"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Sabre customers will benefit through enhanced stability, world-class security, &lt;strong&gt;accelerated speed to market and the development of new capabilities such as NDC-enabled solutions. The two companies will work together on product roadmap needs, with Red Hat fine-tuning their approach to meet Sabre&amp;#8217;s development standards.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&amp;#8220;We are very pleased to be working with an established travel technology leader like Sabre to help fuel their digital transformation,&amp;#8221; said Ashesh Badani, vice president and general manager, Cloud Platforms Business Unit, Red Hat. &amp;#8220;Red Hat OpenShift Container Platform pairs emerging technologies with enterprise-grade stability and enhanced security, enabling Sabre to bring new innovations to market more quickly while helping to meet customer needs for service availability.&amp;#8221;&lt;/p&gt; &lt;p&gt;This collaboration with Red Hat help Sabre complete the last phase of its exit from the Transaction Processing Facility (TPF) mainframe operating system and emphasizes that all future &lt;strong&gt;development for next-generation retailing, distribution and fulfillment will take advantage of innovative architecture.&lt;/strong&gt; This next-generation focus is also supported by Sabre&amp;#8217;s recent agreement with Microsoft, Sabre&amp;#8217;s commercial applications will migrate to Microsoft Azure, and the agreement with Amazon Web Services to execute Sabre&amp;#8217;s innovative cloud strategy.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;hr /&gt; &lt;h3&gt;&lt;strong&gt;Learn more about app dev with OpenShift, Kubernetes, microservices, and DevOps:&lt;/strong&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Try OpenShift Online at &lt;a href="https://www.openshift.com/"&gt;OpenShift.com&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Learn OpenShift using online tutorials with no downloads/installation required &amp;#8211; &lt;a href="https://learn.openshift.com/"&gt;learn.openshift.com&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Sign up for &lt;a href="https://openshift.io/"&gt;Red Hat OpenShift.io&lt;/a&gt; an open online development environment for planning, creating, and deploying hybrid cloud services&lt;/li&gt; &lt;li&gt;Use &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt; to run your own OpenShift cluster on your laptop&lt;/li&gt; &lt;li&gt;Explore cloud-native development and deployment topics on developers.redhat.com: &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/microservices/"&gt;Microservices&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Service Mesh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/devops/"&gt;DevOps&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;title=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" data-a2a-url="https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/" data-a2a-title="Sabre chooses Red Hat OpenShift for cloud-native DevOps platform"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/"&gt;Sabre chooses Red Hat OpenShift for cloud-native DevOps platform&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/z3OJyzhe9GM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;As part of its strategy to re-imagine the business of travel, Sabre Corporation today announced that it will leverage Red Hat OpenShift Container Platform as the foundation for its Next Generation Platform initiative. OpenShift will be the basis of a modern architecture that includes microservices, development and operations (DevOps), and a multi-faceted cloud strategy to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/"&gt;Sabre chooses Red Hat OpenShift for cloud-native DevOps platform&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">510467</post-id><dc:creator>Mike Guerette</dc:creator><dc:date>2018-07-25T15:50:45Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/</feedburner:origLink></entry><entry><title>Announcing Red Hat Application Migration Toolkit 4.1.0: Now with technical reports</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/AteqCdPoPfI/" /><category term="Announcement" /><category term="Developer Tools" /><category term="Red Hat Application Migration Toolset" /><category term="Migration" /><category term="modernization" /><category term="Red Hat Application Migration Toolkit" /><category term="reports" /><category term="RHAMT" /><author><name>Christian Huffman</name></author><id>https://developers.redhat.com/blog/?p=510257</id><updated>2018-07-25T11:00:40Z</updated><published>2018-07-25T11:00:40Z</published><content type="html">&lt;p&gt;[In case you aren’t following the &lt;a href="https://middlewareblog.redhat.com/"&gt;Red Hat JBoss Middleware blog&lt;/a&gt;, we are reposting &lt;a href="https://middlewareblog.redhat.com/2018/07/17/introducing-technical-reports/"&gt;this article&lt;/a&gt; on developers.redhat.com.]&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/rhamt/overview/"&gt;Red Hat Application Migration Toolkit&lt;/a&gt; (RHAMT) 4.1.0 has been released, and with it a new feature that I&amp;#8217;d like to highlight in this article—Technology Reports.&lt;/p&gt; &lt;p&gt;If you’re not familiar with RHAMT, check out my &lt;a href="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/"&gt;previous article&lt;/a&gt; that introduces RHAMT and describes how you can use it to help with migration existing applications to a modern application platform by analyzing your code base.&lt;/p&gt; &lt;h2&gt;Technology reports&lt;/h2&gt; &lt;p&gt;This new feature in RHAMT provides an aggregate listing of the technologies used, grouped by function, for the analyzed applications. It shows how the technologies are distributed. After analysis has been performed, using this report hundreds of applications can be quickly compared. In addition, the size, number of libraries, and story point totals of each application are displayed, allowing you to quickly determine each application’s type from a single report, for example:&lt;span id="more-510257"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview.png"&gt;&lt;img class=" aligncenter wp-image-510277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview-300x143.png" alt="" width="300" height="143" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview-300x143.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview-768x367.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview.png 865w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Examining application_13 in the above list, we can see that this is likely a secured front-end application with a cache for performance. It contains several libraries, most of which pertain to security in some form.&lt;/p&gt; &lt;p&gt;Each application can be further examined to identify the technologies in use. For instance, drilling down into application_13 shows this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application.png"&gt;&lt;img class=" aligncenter wp-image-510287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-1024x419.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-300x123.png" alt="" width="300" height="123" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-300x123.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-768x314.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-1024x419.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application.png 1280w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here, we can see the precise libraries in use within each category. As previously noted, this application uses a large number of security libraries, and we can precisely identify the technologies in use.&lt;/p&gt; &lt;p&gt;Regardless of how you use the Technology Reports feature, I’m certain it will be useful in your migration and modernization efforts.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;title=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" data-a2a-url="https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/" data-a2a-title="Announcing Red Hat Application Migration Toolkit 4.1.0: Now with technical reports"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/"&gt;Announcing Red Hat Application Migration Toolkit 4.1.0: Now with technical reports&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/AteqCdPoPfI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;[In case you aren’t following the Red Hat JBoss Middleware blog, we are reposting this article on developers.redhat.com.] Red Hat Application Migration Toolkit (RHAMT) 4.1.0 has been released, and with it a new feature that I&amp;#8217;d like to highlight in this article—Technology Reports. If you’re not familiar with RHAMT, check out my previous article that [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/"&gt;Announcing Red Hat Application Migration Toolkit 4.1.0: Now with technical reports&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">510257</post-id><dc:creator>Christian Huffman</dc:creator><dc:date>2018-07-25T11:00:40Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/</feedburner:origLink></entry><entry><title>Third maintenance release for Hibernate Search 5.10</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wcJcFAJu2_Y/" /><category term="elasticsearch" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Yoann Rodière</name></author><id>searchisko:content:id:jbossorg_blog-third_maintenance_release_for_hibernate_search_5_10</id><updated>2018-07-25T08:09:22Z</updated><published>2018-07-25T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While we are still working on Hibernate Search 6 to get it ready for an Alpha, things are relatively quiet on the Search 5 side. However, we did not forget about it: we just published Hibernate Search version 5.10.3.Final, the third maintenance release of Hibernate Search 5.10. This release upgrades Hibernate Search to Hibernate ORM 5.3.3.Final, and adds a few minor improvements.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3234"&gt;HSEARCH-3234&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3210"&gt;HSEARCH-3210&lt;/a&gt;: Upgrade to ORM 5.3.3.Final and Hibernate Common Annotations 5.0.4.Final. Hibernate ORM 5.3.3.Final includes quite a few bug fixes and improvements, so be sure to &lt;a href="http://in.relation.to/2018/07/24/hibernate-orm-533-final-out/"&gt;check it out&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3233"&gt;HSEARCH-3233&lt;/a&gt;: Overriding an analyzer in the QueryBuilder with an unknown analyzer should now lead to a proper SearchException.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3228"&gt;HSEARCH-3228&lt;/a&gt;: The Elasticsearch integration now uses Gson 2.8.5, thanks to Leandro Freitas.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3215"&gt;HSEARCH-3215&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3216"&gt;HSEARCH-3216&lt;/a&gt;: A few typos in the documentation were fixed, thanks to José Santos.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The other changes are mainly related to our build process, working toward testing Hibernate Search on JDK11.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For a full list of changes since the previous releases, please see the &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10061&amp;amp;version=31686"&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-to-get-this-release"&gt;&lt;a class="anchor" href="#how-to-get-this-release"&gt;&lt;/a&gt;How to get this release&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/search/releases/5.10/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-search"&gt;hibernate-search tag on Stackoverflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-search"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wcJcFAJu2_Y" height="1" width="1" alt=""/&gt;</content><summary>While we are still working on Hibernate Search 6 to get it ready for an Alpha, things are relatively quiet on the Search 5 side. However, we did not forget about it: we just published Hibernate Search version 5.10.3.Final, the third maintenance release of Hibernate Search 5.10. This release upgrades Hibernate Search to Hibernate ORM 5.3.3.Final, and adds a few minor improvements. What’s new? HSEAR...</summary><dc:creator>Yoann Rodière</dc:creator><dc:date>2018-07-25T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/25/hibernate-search-5-10-3-Final/</feedburner:origLink></entry><entry><title>Improving .NET Core Kestrel performance using a Linux-specific transport</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Y3hdUtXZZKk/" /><category term=".NET Core" /><category term="Container Development Kit" /><category term="Red Hat OpenShift Container Platform" /><category term=".NET" /><category term="benchmark" /><category term="Kestrel" /><category term="libuv" /><category term="Red Hat OpenShift" /><category term="TechEmpower" /><author><name>Tom Deseyn</name></author><id>https://developers.redhat.com/blog/?p=506607</id><updated>2018-07-24T18:00:51Z</updated><published>2018-07-24T18:00:51Z</published><content type="html">&lt;p&gt;ASP.NET Core is the web framework for .NET Core. Performance is a key feature. The stack is heavily optimized and continuously benchmarked. Kestrel is the name of the HTTP server. In this blog post, we&amp;#8217;ll replace Kestrel&amp;#8217;s networking layer with a Linux-specific implementation and benchmark it against the default out-of-the-box implementations. The TechEmpower web framework benchmarks are used to compare the network layer performance.&lt;/p&gt; &lt;p&gt;&lt;span id="more-506607"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Transport abstraction&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;Kestrel supports replacing the network implementation thanks to the Transport abstraction. ASP.NET Core 1.x uses &lt;code&gt;&lt;a href="https://github.com/libuv/libuv"&gt;libuv&lt;/a&gt;&lt;/code&gt; for its network implementation. &lt;code&gt;libuv&lt;/code&gt; is the asynchronous I/O library that underpins Node.js. The use of &lt;code&gt;libuv&lt;/code&gt; predates .NET Core, when cross-platform ASP.NET was called ASP.NET 5. Then scope broadened to the cross-platform .NET implementation that we know now as &lt;em&gt;.&lt;/em&gt;NET Core. As part of .NET Core, a network implementation became available (using the &lt;code&gt;Socket&lt;/code&gt; class). ASP.NET Core 2.0 introduced the Transport abstraction in Kestrel to make it possible to change from the &lt;code&gt;libuv&lt;/code&gt; to a Socket-based implementation. For version 2.1, many optimizations were made to the Socket implementation and the Sockets transport has become the default in Kestrel.&lt;/p&gt; &lt;p&gt;The Transport abstraction allows other network implementations to be plugged in. For example, you could leverage the Windows RIO socket API or user-space network stacks. In this blog post, we&amp;#8217;ll look at a Linux-specific transport. The implementation can be used as a direct replacement for the &lt;code&gt;libuv&lt;/code&gt;/Sockets transport. It doesn&amp;#8217;t need privileged capabilities and it works in constrained containers, for example, when running on Red Hat &lt;a href="https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/"&gt;OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For future versions, Kestrel aims to become more usable as a &lt;a href="https://github.com/aspnet/KestrelHttpServer/issues/1980"&gt;basis for non-HTTP servers&lt;/a&gt;. The Transport and related abstractions will still change as part of that project.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Benchmark introduction&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;Microsoft is continuously benchmarking the ASP.NET Core stack. The results can be seen at &lt;a href="https://aka.ms/aspnet/benchmarks"&gt;https://aka.ms/aspnet/benchmarks&lt;/a&gt;. The benchmarks include scenarios from the &lt;a href="https://www.techempower.com/benchmarks/"&gt;TechEmpower web framework benchmarks&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;It is easy to get lost watching the benchmark results, so let me give a short overview of the TechEmpower benchmarks.&lt;/p&gt; &lt;p&gt;There are a number of &lt;a href="https://www.techempower.com/benchmarks/#section=code"&gt;scenarios&lt;/a&gt; (also called test types). The Fortunes test type is the most interesting, because it includes using an object-relational mapper (ORM) and a database. This is a common use-case in a web application/service. Previous versions of ASP.NET Core did not perform well in this scenario. ASP.NET Core 2.1 improved it significantly thanks to optimizations in the stack and also in the &lt;a href="http://www.roji.org/npgsql-4-perf"&gt;PostgreSQL driver&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The other scenarios are less representative of a typical application. They stress particular aspects of the stack. They may be interesting to look at if they match your use-case closely. For framework developers, they help identify opportunities to optimize the stack further.&lt;/p&gt; &lt;p&gt;For example, consider the Plaintext scenario. This scenario involves a client sending 16 requests back-to-back (&lt;a href="https://en.wikipedia.org/wiki/HTTP_pipelining"&gt;pipelined&lt;/a&gt;) for which the server knows the response without needing to perform I/O operations or computation. This is not representative of a typical request, but it is a good stress test for parsing HTTP requests.&lt;/p&gt; &lt;p&gt;Each implementation has a class. For example, ASP.NET Core Plaintext has a &lt;em&gt;platform&lt;/em&gt;, &lt;em&gt;micro,&lt;/em&gt; and &lt;em&gt;full&lt;/em&gt; implementation. The full implementation is using the MVC middleware. The micro implementation is implemented at the pipeline level, and the platform implementation is directly building on top of Kestrel. While the platform class provides an idea of how powerful the engine is, it is not an API that is used to program against by application developers.&lt;/p&gt; &lt;p&gt;The benchmark results include a Latency tab. Some implementations achieve a very high number of requests per second but at a considerable latency cost.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Linux transport&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;Similar to the other implementations, the Linux transport makes use of non-blocking sockets and &lt;a href="https://en.wikipedia.org/wiki/HTTP_pipelining"&gt;epoll&lt;/a&gt;. Like .NET Core&amp;#8217;s &lt;code&gt;Socket&lt;/code&gt;, the &lt;code&gt;eventloop&lt;/code&gt; is implemented in managed (C#) code. This is different from the &lt;code&gt;libuv&lt;/code&gt; loop, which is part of the native &lt;code&gt;libuv&lt;/code&gt; library.&lt;/p&gt; &lt;p&gt;Two Linux-specific features are used: &lt;code&gt;&lt;a href="https://lwn.net/Articles/542629/"&gt;SO_REUSEPORT&lt;/a&gt;&lt;/code&gt; lets the kernel load-balance accepted connections over a number of threads, and the Linux AIO API is used to batch send and receive calls.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Benchmark&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;For our benchmark, we&amp;#8217;ll use the JSON and Plaintext scenarios at the micro class. For the JSON benchmark, the web server responds with a simple JSON object that is serialized for each request. This means that for each request, our web server will do a tiny amount of useful work which makes the transport weigh through. For the Plaintext scenario, the server responds with a fixed string. Due to the pipelining (per 16 requests), only 1/16 of the requests need to do network I/O.&lt;/p&gt; &lt;p&gt;Each transport has a number of settings. Both the &lt;code&gt;libuv&lt;/code&gt; and Linux transport have a property to set the number of threads for receiving/sending messages. The Sockets transport performs sends and receives on the &lt;code&gt;ThreadPool&lt;/code&gt;. It has an &lt;code&gt;IOQueueCount&lt;/code&gt; setting that we&amp;#8217;ll set instead.&lt;/p&gt; &lt;p&gt;The graphs below show the HTTP requests per second (RPS) for varying &lt;code&gt;ThreadCount&lt;/code&gt;/&lt;code&gt;IOQueueCount&lt;/code&gt; settings.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-506647 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext.png 600w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext-300x186.png 300w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-506637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/json.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/json.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/json.png 600w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/json-300x186.png 300w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;/p&gt; &lt;p&gt;We can see that each transport is initially limited by the number of allocated threads. The actual handling happens on the &lt;code&gt;ThreadPool&lt;/code&gt;, which is not fully loaded yet. We see Sockets has a higher RPS because it is also using the &lt;code&gt;ThreadPool&lt;/code&gt; for network sends/receives. We can’t compare it with the other transports because it is constrained in a different way (it can use more threads for transporting).&lt;/p&gt; &lt;table cellspacing="0" align="center"&gt; &lt;tbody&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Linux vs &lt;code&gt;libuv&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Plaintext&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+15%&lt;/td&gt; &lt;/tr&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+20%&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div style="text-align: center;"&gt;Transport is CPU-constrained&lt;/div&gt; &lt;p&gt;When we increase the &lt;code&gt;ThreadCount&lt;/code&gt; sufficiently, the transport is no longer the limiting factor. Now the constraint becomes either the CPU or network bandwidth.&lt;/p&gt; &lt;p&gt;The TechEmpower Round 16 benchmark hit the network bandwidth for the Plaintext scenario. If you look at the &lt;a href="https://www.techempower.com/benchmarks/#section=data-r16&amp;#38;hw=ph&amp;#38;test=plaintext"&gt;benchmark results&lt;/a&gt;, you see the top results are all about the same value. These benchmarks indicate underutilized CPU.&lt;/p&gt; &lt;p&gt;For our benchmark, the CPU is fully loaded. The processor is busy sending/receiving and handling the requests. The difference we see between the scenarios is due to the different workload per network request. For Plaintext, we receive 16 pipelined HTTP requests with a single network request. For JSON, there is an HTTP request per network request. This makes the transport weigh through much more in the JSON scenario compared to the Plaintext scenario.&lt;/p&gt; &lt;table cellspacing="0" align="center"&gt; &lt;tbody&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;&lt;code&gt;libuv&lt;/code&gt; vs Sockets&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Linux vs &lt;code&gt;libuv&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Linux vs Sockets&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Plaintext&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+9%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+0%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+9%&lt;/td&gt; &lt;/tr&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Json&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+17%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+10%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+28%&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div style="text-align: center;"&gt;App is CPU-constrained&lt;/div&gt; &lt;h2&gt;&lt;strong&gt;Using the Linux transport&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;The Kestrel Linux transport is an experimental implementation. You can try it by using the &lt;code&gt;2.1.0-preview1&lt;/code&gt; package published on &lt;a href="https://www.myget.org"&gt;myget.org&lt;/a&gt;. If you try this package, you can use &lt;a href="https://github.com/redhat-developer/kestrel-linux-transport/issues/61"&gt;this GitHub issue&lt;/a&gt; to give feedback and to be informed of (security) issues. Based on your feedback, we&amp;#8217;ll see if it makes sense to maintain a supported 2.1 version published on &lt;a href="https://www.nuget.org"&gt;nuget.org&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Do this to add the myget feed to a &lt;code&gt;NuGet.Config&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&amp;#60;?xml version="1.0" encoding="utf-8"?&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;packageSources&amp;#62; &amp;#60;add key="rh" value="https://www.myget.org/F/redhat-dotnet/api/v3/index.json" /&amp;#62; &amp;#60;/packageSources&amp;#62; &amp;#60;/configuration&amp;#62; &lt;/pre&gt; &lt;p&gt;And add a package reference in your &lt;code&gt;csproj&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&amp;#60;PackageReference Include="RedHat.AspNetCore.Server.Kestrel.Transport.Linux" Version="2.1.0-preview1" /&amp;#62; &lt;/pre&gt; &lt;p&gt;Then we call &lt;code&gt;UseLinuxTransport&lt;/code&gt; when creating the &lt;code&gt;WebHost&lt;/code&gt; in &lt;code&gt;Program.cs&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;public static IWebHost BuildWebHost(string[] args) =&amp;#62; WebHost.CreateDefaultBuilder(args) &lt;em&gt;.UseLinuxTransport()&lt;/em&gt; .UseStartup() .Build(); &lt;/pre&gt; &lt;p&gt;It is safe to call &lt;code&gt;UseLinuxTransport&lt;/code&gt; on non-Linux platforms. The method will change the transport only when the application runs on a Linux system.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;In this blog post, you&amp;#8217;ve learned about Kestrel and how its Transport abstraction supports replacing the network implementation. We took a closer look at TechEmpower benchmarks and explored how CPU and network limits affect benchmark results. We’ve see that a Linux-specific transport can give a measurable gain compared to the default out-of-the-box implementations.&lt;/p&gt; &lt;p&gt;For information about running .NET Core on Red Hat Enterprise Linux and OpenShift, see the &lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html/getting_started_guide/"&gt;.NET Core &lt;em&gt;Getting Started Guide&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;title=Improving%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" data-a2a-url="https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/" data-a2a-title="Improving .NET Core Kestrel performance using a Linux-specific transport"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/"&gt;Improving .NET Core Kestrel performance using a Linux-specific transport&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Y3hdUtXZZKk" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;ASP.NET Core is the web framework for .NET Core. Performance is a key feature. The stack is heavily optimized and continuously benchmarked. Kestrel is the name of the HTTP server. In this blog post, we&amp;#8217;ll replace Kestrel&amp;#8217;s networking layer with a Linux-specific implementation and benchmark it against the default out-of-the-box implementations. The TechEmpower web framework [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/"&gt;Improving .NET Core Kestrel performance using a Linux-specific transport&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">506607</post-id><dc:creator>Tom Deseyn</dc:creator><dc:date>2018-07-24T18:00:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/</feedburner:origLink></entry><entry><title>How to migrate your SOAP web service to REST with Camel</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/8RiktdOLakg/" /><category term="Developer Tools" /><category term="JBoss Fuse" /><category term="Red Hat JBoss Developer Studio" /><category term="camel" /><category term="Developer Studio" /><category term="devstudio" /><category term="Eclipse" /><category term="Fuse" /><category term="Fuse Tooling" /><category term="Integration" /><category term="jbosstools" /><category term="Red Hat Fuse" /><category term="REST" /><category term="REST DSL" /><category term="SOAP" /><author><name>Brian Fitzpatrick</name></author><id>https://developers.redhat.com/blog/?p=509347</id><updated>2018-07-24T11:00:12Z</updated><published>2018-07-24T11:00:12Z</published><content type="html">&lt;p&gt;SOAP-based services are plentiful in many enterprise solutions and are slowly being replaced by RESTful services to simplify their use. There is a new wizard to help you make the transition with Apache Camel’s Rest DSL added in the latest version of &lt;a href="https://tools.jboss.org/features/fusetools.html"&gt;Red Hat Fuse Tooling&lt;/a&gt;. This article shows how to use the new wizard to transition from older SOAP-based services to more modern REST-based services.&lt;/p&gt; &lt;p&gt;If you aren&amp;#8217;t familiar, &lt;a href="https://developers.redhat.com/products/fuse/overview/"&gt;Red Hat Fuse&lt;/a&gt; is an integration platform based on Camel and a number of other projects. The updating Fuse Tooling is available in &lt;a href="https://developers.redhat.com/blog/2018/07/18/announcing-devstudio-12-jboss-tools-46/" target="_blank" rel="noopener"&gt;Red Hat Developer Studio 12.0.0&lt;/a&gt;, the desktop IDE that is based on Eclipse 4.8 Photon. You can also get the new wizard by adding &lt;a href="http://tools.jboss.org/downloads/jbosstools/photon/4.6.0.Final.html"&gt;JBoss Tools 4.6&lt;/a&gt; to your existing Eclipse 4.8 Photon installation by downloading it directly, or installing via the Eclipse Marketplace.&lt;/p&gt; &lt;p&gt;&lt;span id="more-509347"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is the REST DSL?&lt;/h2&gt; &lt;p&gt;The Apache Camel Rest DSL offers an easier way for users to define REST services using common REST verbs such as GET, POST, DELETE, etc. It is available for both the XML (Spring or Blueprint) and Java DSLs as a facade that builds REST endpoints as consumers for Camel routes.&lt;/p&gt; &lt;p&gt;Many examples can be found at the &lt;a href="http://camel.apache.org/rest-dsl.html"&gt;Apache Camel website&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;img class="alignnone size-full wp-image-427922" src="https://developers.redhat.com/blog/wp-content/uploads/2016/09/fusetooling_icon.gif" alt="" width="118" height="150" /&gt;&lt;/p&gt; &lt;h2&gt;Is the REST DSL supported in the Fuse Tooling Route Editor?&lt;/h2&gt; &lt;p&gt;In previous versions of Red Hat Fuse Tooling in Eclipse, there wasn&amp;#8217;t a good way of rendering this useful functionality. However, with this release, there will be read-only support for the Rest DSL through a new REST tab in the Fuse Tooling Route Editor. (This functionality will be fleshed out in future releases to make it more usable, but for now, you can still edit your Rest DSL in the Source tab and see the details in the REST tab.&lt;/p&gt; &lt;h2&gt;Where do my SOAP services come into play?&lt;/h2&gt; &lt;p&gt;An older tool called &lt;code&gt;wsdl2rest&lt;/code&gt; (now available at &lt;a href="https://github.com/jboss-fuse/wsdl2rest" target="_blank" rel="noopener"&gt;https://github.com/jboss-fuse/wsdl2rest&lt;/a&gt;) has existed for a while as an unsupported project. This tool simplifies migrating from an existing JAX-WS SOAP-based service to a RESTful service. The tool has been dusted off and improved for Red Hat Fuse 7 and is now a supported part of the distribution, meaning you can use it at the command line using a handful of command-line options and generate a Camel configuration that maps SOAP operations to REST operations. All you have to do is pass the URL to the source WSDL, an output path for generated Java artifacts, an output path for the Blueprint or Spring Camel context file, and details about the JAX-WS and JAX-RS addresses for the endpoints used.&lt;/p&gt; &lt;p&gt;However, we&amp;#8217;ve also enabled an option in the tooling to use this utility. Now you can fire up the new &amp;#8220;Camel Rest DSL from WSDL&amp;#8221; wizard! The wizard simplifies gathering the required options, boiling it down to selecting the WSDL and a Fuse integration project so it knows what Camel DSL (Spring, Blueprint, Spring Boot) to generate, and you’re off to the races!&lt;/p&gt; &lt;h2&gt;How does the &amp;#8220;Camel Rest DSL from WSDL&amp;#8221; wizard work?&lt;/h2&gt; &lt;p&gt;The wizard is available in Eclipse, with Red Hat Developer Studio 12 and the latest version of Red Hat Fuse Tooling installed. To use the wizard, you will need to have a pre-existing Red Hat Fuse integration project in your workspace and access to a WSDL file. You can create a new project by selecting &lt;strong&gt;File-&amp;#62;New-&amp;#62;Fuse Integration Project&lt;/strong&gt; to open the New Fuse Integration Project wizard and the WSDL file can be local or remote, available via URL.&lt;/p&gt; &lt;p&gt;Once the prerequisites are in place, do the following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Right-click a Fuse integration project in the Fuse Integration perspective and select &lt;strong&gt;New-&amp;#62;Camel Rest DSL from WSDL&lt;/strong&gt; or click &lt;strong&gt;File-&amp;#62;New-&amp;#62;Other…, Red Hat Fuse-&amp;#62;Camel Rest DSL from WSDL&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;To choose a WSDL file locally, use the “&amp;#8230;” button to the right of the WSDL File field to open a file selection dialog box and choose a file from your file system. If you have a valid URL to a WSDL on the network, you can type the URL in the field directly.&lt;/li&gt; &lt;li&gt;If a Fuse integration project is selected in the Project Explorer, it will be automatically selected in the Destination Project field. If not, you can use the “&amp;#8230;” button to select the project where you want artifacts to be created.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-509377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page1.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page1.jpg" alt="" width="511" height="493" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page1.jpg 511w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page1-300x289.jpg 300w" sizes="(max-width: 511px) 100vw, 511px" /&gt;&lt;/li&gt; &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt; to shift to the Advanced Options page.&lt;/li&gt; &lt;li&gt;The Destination Java Folder and Destination Camel Folder fields are pre-populated based on the selected Fuse integration project and the Camel DSL used by the project. There are different default paths based on whether the project is Spring, Blueprint, or Spring Boot. Note that if there are existing files in the directory or the directory has to be created first, warnings will exist to let you know about these conditions.&lt;/li&gt; &lt;li&gt;The Target Service Address field corresponds to the SOAP address specified in the WSDL binding, but you can customize it to match the actual address of the SOAP service referenced by the WSDL.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-509437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page2.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page2.jpg" alt="" width="511" height="493" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page2.jpg 511w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-wizard-page2-300x289.jpg 300w" sizes="(max-width: 511px) 100vw, 511px" /&gt;&lt;/li&gt; &lt;li&gt;The optional Target REST Service Address field corresponds to the URL where the REST service will be accessible. This URL is decomposed into settings for the &lt;code&gt;&amp;#60;restConfiguration&amp;#62;&lt;/code&gt; and &lt;code&gt;&amp;#60;rest&amp;#62;&lt;/code&gt; tags in the Rest DSL to specify the complete URL for REST operations mapped to the SOAP service. If not specified in the wizard, these details can be provided later in the Rest DSL directly.&lt;/li&gt; &lt;li&gt;Click &lt;strong&gt;Finish&lt;/strong&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Once the wizard has completed processing the referenced WSDL file, it generates a new Camel configuration as well as wrapper code in Java mapping the SOAP operations to REST operations. If you open the generated Camel file, you will see the various routes that have been created and the Rest DSL used to map operations. The generated Rest DSL in Camel can be further customized as needed.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s the generated Camel configuration in the Design tab of the Route Editor:&lt;/p&gt; &lt;div id="attachment_509447" style="width: 650px" class="wp-caption alignnone"&gt;&lt;img class=" alignnone size-full wp-image-509447 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-design-tab-1024x555.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-design-tab-1024x555.jpg" alt="" width="640" height="347" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-design-tab-1024x555.jpg 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-design-tab-300x163.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-design-tab-768x416.jpg 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p class="wp-caption-text"&gt;&lt;br /&gt;Here&amp;#8217;s the generated Camel configuration in the REST tab of the Route Editor:&lt;/p&gt;&lt;/div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-509457 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-rest-tab-1024x555.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-rest-tab-1024x555.jpg" alt="" width="640" height="347" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-rest-tab-1024x555.jpg 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-rest-tab-300x163.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/wsdl2rest-editor-rest-tab-768x416.jpg 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;This utility provides a jump start for re-using older SOAP-based services in more modern REST-based ways. We look forward to improving on the new REST tab in future releases of the Fuse Tooling!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;linkname=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fmigrate-soap-to-rest-with-camel%2F&amp;#38;title=How%20to%20migrate%20your%20SOAP%20web%20service%20to%20REST%20with%20Camel" data-a2a-url="https://developers.redhat.com/blog/2018/07/24/migrate-soap-to-rest-with-camel/" data-a2a-title="How to migrate your SOAP web service to REST with Camel"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/24/migrate-soap-to-rest-with-camel/"&gt;How to migrate your SOAP web service to REST with Camel&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/8RiktdOLakg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;SOAP-based services are plentiful in many enterprise solutions and are slowly being replaced by RESTful services to simplify their use. There is a new wizard to help you make the transition with Apache Camel’s Rest DSL added in the latest version of Red Hat Fuse Tooling. This article shows how to use the new wizard to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/24/migrate-soap-to-rest-with-camel/"&gt;How to migrate your SOAP web service to REST with Camel&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/07/24/migrate-soap-to-rest-with-camel/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">509347</post-id><dc:creator>Brian Fitzpatrick</dc:creator><dc:date>2018-07-24T11:00:12Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/24/migrate-soap-to-rest-with-camel/</feedburner:origLink></entry><entry><title>Infinispan Spark connector 0.8 relased</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KpFiL7mVUQo/infinispan-spark-connector-08-relased.html" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><author><name>Gustavo Fernandes</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_spark_connector_0_8_relased</id><updated>2018-07-24T10:08:20Z</updated><published>2018-07-24T10:08:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;br /&gt;The Infinispan Spark connector version 0.8 has been released and is available in Maven central and &lt;a href="https://spark-packages.org/?q=infinispan-spark" target="_blank"&gt;SparkPackages&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is a maintenance only release to bring compatibility with Spark 2.3 and Infinispan 9.3.&lt;br /&gt;&lt;br /&gt;For more information about the connector, please consult the &lt;a href="https://github.com/infinispan/infinispan-spark" target="_blank"&gt;documentation &lt;/a&gt;and also try the docker based &lt;a href="https://github.com/infinispan/infinispan-spark/tree/master/examples/twitter" target="_blank"&gt;sample.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;For feedback and general help, please use the Infinispan &lt;a href="https://infinispan.zulipchat.com/" target="_blank"&gt;chat.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/TbaAMBwLJAY" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KpFiL7mVUQo" height="1" width="1" alt=""/&gt;</content><summary>The Infinispan Spark connector version 0.8 has been released and is available in Maven central and SparkPackages. This is a maintenance only release to bring compatibility with Spark 2.3 and Infinispan 9.3. For more information about the connector, please consult the documentation and also try the docker based sample. For feedback and general help, please use the Infinispan chat.</summary><dc:creator>Gustavo Fernandes</dc:creator><dc:date>2018-07-24T10:08:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/TbaAMBwLJAY/infinispan-spark-connector-08-relased.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.3.3.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xA9VTtkcGAg/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_3_3_final_released</id><updated>2018-07-25T08:09:22Z</updated><published>2018-07-24T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Just two weeks after 5.3.2.Final, here is a new maintenance release for the 5.3 branch, namely Hibernate ORM 5.3.3.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;No big changes but a lot of bugfixes and tweaks (keep the test cases coming!).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The big news is that we can now run our tests with the latest build of the upcoming JDK 11.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is a recommended upgrade for everyone using Hibernate ORM 5.3.x.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="bug-fixes"&gt;&lt;a class="anchor" href="#bug-fixes"&gt;&lt;/a&gt;Bug fixes&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We fixed quite a lot of issues. Some are present in 5.2, so you should think about upgrading to 5.3.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Here is a quick selection of fixes:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12740"&gt;HHH-12740&lt;/a&gt; - Subselect fetching doesn’t work when multiLoad was used&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12776"&gt;HHH-12776&lt;/a&gt; - &lt;code&gt;NullPointerException&lt;/code&gt; when executing native query on an Audited Entity&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12718"&gt;HHH-12718&lt;/a&gt; - Entity changes in &lt;code&gt;@PreUpdate&lt;/code&gt; callback are not persisted when lazy loading is active for more than one field&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12786"&gt;HHH-12786&lt;/a&gt; - Deleting an entity leads to &lt;code&gt;NullPointerException&lt;/code&gt; in ByteBuddy proxy&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12795"&gt;HHH-12795&lt;/a&gt; - Setting &lt;code&gt;FlushMode&lt;/code&gt; to manual for a &lt;code&gt;@NamedQuery&lt;/code&gt; is ignored&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="dependency-upgrade"&gt;&lt;a class="anchor" href="#dependency-upgrade"&gt;&lt;/a&gt;Dependency upgrade&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should update your dependencies to Javassist and ByteBuddy:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Javassist: 3.23.1-GA&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ByteBuddy: 1.8.13&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;They were upgraded to versions supporting JDK 11.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="jdk-11-support"&gt;&lt;a class="anchor" href="#jdk-11-support"&gt;&lt;/a&gt;JDK 11 support&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We made quite a lot of build changes to support running our tests with the latest build of JDK 11.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;They are now run on our CI on a daily basis so we should be ready when JDK 11 gets released.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="full-changelog"&gt;&lt;a class="anchor" href="#full-changelog"&gt;&lt;/a&gt;Full changelog&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the full list of changes &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31687/tab/release-report-all-issues"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?version=31687&amp;amp;styleName=Html&amp;amp;projectId=10031"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-5-3-3-final"&gt;&lt;a class="anchor" href="#getting-5-3-3-final"&gt;&lt;/a&gt;Getting 5.3.3.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/orm/releases/5.3/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/tagged/hibernate"&gt;hibernate tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-orm"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xA9VTtkcGAg" height="1" width="1" alt=""/&gt;</content><summary>Just two weeks after 5.3.2.Final, here is a new maintenance release for the 5.3 branch, namely Hibernate ORM 5.3.3.Final. No big changes but a lot of bugfixes and tweaks (keep the test cases coming!). The big news is that we can now run our tests with the latest build of the upcoming JDK 11. This is a recommended upgrade for everyone using Hibernate ORM 5.3.x. What’s new Bug fixes We fixed quite a...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2018-07-24T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/24/hibernate-orm-533-final-out/</feedburner:origLink></entry><entry><title>3 Pitfalls Everyone Should Avoid with Hybrid Multicloud (Part 4)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/2g23EWBuCB8/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-4.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_pitfalls_everyone_should_avoid_with_hybrid_multicloud_part_4</id><updated>2018-07-23T05:00:09Z</updated><published>2018-07-23T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s1600/pitfalls.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="250" data-original-width="283" height="175" src="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s200/pitfalls.png" title="" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid.&lt;br /&gt;&lt;br /&gt;From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications.&lt;br /&gt;&lt;br /&gt;Let's take a journey, looking closely at what hybrid multicloud means for your business. Let's examine the decisions being made when delivering applications and dealing with legacy applications. Likely these are some of the most important resources to your business.&lt;br /&gt;&lt;br /&gt;This article highlights three pitfalls everyone should be aware of when transitioning into hybrid multicloud environments. It's based on experiences from interactions with organizations working to conquer hybrid multicloud while delivering their solutions.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;In part one&lt;/a&gt;, we covered the basic definitions to level the playing field. We outlined our views on hybrid cloud and multicloud, making sure to show the dividing lines between the two. This set the stage &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html#more" target="_blank"&gt;for part two&lt;/a&gt;, where the first pitfall discussed why cost is not always the obvious motivator for moving in to the cloud. Determining if moving all workloads in to the cloud is viable was explored in &lt;a href="http://www.schabell.org/2018/07/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html" target="_blank"&gt;part three&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Finally, in part four we look at what to do with your data in the cloud. Should you move data in to the cloud? How much? What data in the cloud works and what is too much of a rick for the cloud?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Data... data... data&lt;/h3&gt;The first thing about cloud and data, the crucial factor to all your decisions, is determining your bandwidth and storage needs.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-5vnIvMUbf8s/Wz4h5VF5fqI/AAAAAAAAs4c/cc3S4F95xCoZU_0beOX4Ecxan2BFb1kOACLcBGAs/s1600/data-data-data.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="1000" data-original-width="1600" height="200" src="https://1.bp.blogspot.com/-5vnIvMUbf8s/Wz4h5VF5fqI/AAAAAAAAs4c/cc3S4F95xCoZU_0beOX4Ecxan2BFb1kOACLcBGAs/s320/data-data-data.jpg" title="" width="320" /&gt;&lt;/a&gt;A recent &lt;a href="http://www.businessinsider.com/companies-waste-62-billion-on-the-cloud-by-paying-for-storage-they-dont-need-according-to-a-report-2017-11" target="_blank"&gt;article stated that&lt;/a&gt;, "Based on Gartner's projection that data storage will be a $173 billion business in 2018." This has caught your attention as you're looking to push workloads and storage in to the cloud.&lt;br /&gt;&lt;br /&gt;The article goes even further to state that, "Companies globally could save $62 billion in IT costs just by optimizing their workloads.” After reading the previous articles in this series, you should not be surprised at this statement. What is surprising follows when they state that, “Only 25% of companies would save money if they transferred their server data directly onto the cloud.”&lt;br /&gt;&lt;br /&gt;Wait a minute, work loads can be optimized for the cloud, but only a small percentage of companies would save on data in the cloud?&lt;br /&gt;&lt;br /&gt;If you consider that cloud providers often charge rates based on bandwidth, moving your data from on premise to the cloud quickly becomes a cost burden you don't want to carry. Putting data in the cloud is a rare occurrence, usually something like this:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;A single cloud with storage and applications&lt;/li&gt;&lt;li&gt;Applications in cloud with storage on premise&lt;/li&gt;&lt;li&gt;Applications in the cloud and their data cached in cloud, storage on premise&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div&gt;In the first bandwidth costs are reduced by keeping everything inside a single cloud vendor, which we know is simply lock-in and often not part of a CIO's cloud strategy or risk prevention.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The second only keeps data in the cloud that applications collect and transports out the minimum down to on premise storage. This creates a carefully considered strategy of only deploying data minimalistic applications in a cloud.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The last example is where data is cached in the cloud with applications and storage of that data, or the one truth, is stored on premise. This means analytics, AI and machine learning can be run on premise without having to upload to cloud providers and then back again after processing. The cached data is based only on application needs and can even be cached across multicloud deployments.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://1.bp.blogspot.com/-Epf7DznuB6M/Wz4iCzNQYqI/AAAAAAAAs4g/fI7gWT4vh-0uxjUmh5BoWFyX3hMEToGQgCLcBGAs/s1600/security-hole.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="435" data-original-width="580" height="240" src="https://1.bp.blogspot.com/-Epf7DznuB6M/Wz4iCzNQYqI/AAAAAAAAs4g/fI7gWT4vh-0uxjUmh5BoWFyX3hMEToGQgCLcBGAs/s320/security-hole.jpg" title="" width="320" /&gt;&lt;/a&gt;Amsterdam Airport Schiphol &lt;a href="https://www.redhat.com/en/resources/amsterdam-airport-schiphol-case-study" target="_blank"&gt;case study is available online&lt;/a&gt;&amp;nbsp;and discusses their data, cloud and deployment strategies across a hybrid multicloud environment.&lt;/div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Data dangers&lt;/h3&gt;Most companies realize all to well that their data is their proprietary advantage in their market. It's their intellectual capital at the end of the day and something they've thought very carefully about in regards to where it's going to be stored.&lt;br /&gt;&lt;br /&gt;Imagine this scenario if you will.&lt;br /&gt;&lt;br /&gt;You’re a retailer, one of the top ten worldwide. You've been planning your cloud strategy for some time now and have landed on making use of Amazon's cloud services. All of a sudden,&amp;nbsp;&lt;a href="https://www.forbes.com/sites/ciocentral/2017/06/23/amazon-buys-whole-foods-now-what-the-story-behind-the-story/#33e9cc6be898" target="_blank"&gt;Amazon buys Whole Foods&lt;/a&gt;&amp;nbsp;and is moving into your market.&lt;br /&gt;&lt;br /&gt;Overnight Amazon is now grown to 50% of your retail size. Do you trust their cloud with your retail data? What do you do if you already have your data in their cloud? Did your cloud planning start with&amp;nbsp;having an exit-strategy?&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Pitfalls shared, pitfalls avoided&lt;/h3&gt;Sharing just a few of the pitfalls we have seen in our travels should help your company plan for a safer, more secure and persistent cloud strategy. Understanding that &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html#more" target="_blank"&gt;cost is not the obvious motivator&lt;/a&gt;, that &lt;a href="http://www.schabell.org/2018/07/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html" target="_blank"&gt;not everything needs or should be put in the cloud&lt;/a&gt;, and managing your data effectively in the cloud are all key factors to ensuring success.&lt;br /&gt;&lt;br /&gt;Missing the start of this series? Just head on back and &lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;catch up with part 1&lt;/a&gt;.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/xxDXx5r1ZGw" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/2g23EWBuCB8" height="1" width="1" alt=""/&gt;</content><summary>The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid. From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications. Let's take a journey, looking closely at ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-07-23T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/xxDXx5r1ZGw/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-4.html</feedburner:origLink></entry><entry><title>Hibernate Community Newsletter 14/2018</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/U8AvdK23Ljg/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="newsletter" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_community_newsletter_14_2018</id><updated>2018-07-25T08:09:22Z</updated><published>2018-07-23T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="articles"&gt;&lt;a class="anchor" href="#articles"&gt;&lt;/a&gt;Articles&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to call SQL functions from the &lt;code&gt;SELECT&lt;/code&gt; clause of a JPQL or Criteria API queries, then you should register the function as otherwise, the entity query will not compile. For more details about the best way to register such SQL function, check out &lt;a href="https://vladmihalcea.com/hibernate-sql-function-jpql-criteria-api-query/"&gt;this article&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://www.codesod.com/2018/04/jpa-tips-avoiding-n-1-select-problem.html"&gt;This article&lt;/a&gt; shows that collection EAGER fetching can lead to N+1 query problems. However, this can happen not only to entity collections. You can bump into this issue with &lt;code&gt;@ManyToOne&lt;/code&gt; or &lt;code&gt;@OneToOne&lt;/code&gt; associations as well since they are fetched eagerly by default too. The best way to address the N+1 query issue is to detect it automatically during testing, as explained &lt;a href="https://vladmihalcea.com/how-to-detect-the-n-plus-one-query-problem-during-testing/"&gt;in this article&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For our Russian readers, there is &lt;a href="https://habr.com/post/416851/"&gt;a very good article on Habr&lt;/a&gt; which addresses many topics that are very useful when using JPA and Hibernate.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to customize the default mapping between JPA entities and database columns, you can use a custom naming strategy. &lt;a href="https://www.devglan.com/hibernate/hibernate-naming-strategy"&gt;This article&lt;/a&gt; explains how you can do that with both Hibernate 4 and 5.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are using Hazelcast as a Hibernate 2nd-level cache provider, and you are running on Java 10, check out &lt;a href="https://dzone.com/articles/migrate-hibernate-caching-with-hazelcast-in-java-1"&gt;this article&lt;/a&gt; for how to set up your project dependencies in Maven so that everything works properly.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Java Magazine features &lt;a href="http://www.javamagazine.mozaicreader.com/MayJune2018/Twitter#&amp;amp;pageSet=27&amp;amp;page=0&amp;amp;contentItem=0"&gt;one article&lt;/a&gt; about some design patterns to consider when using JPA and Hibernate.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="time-to-upgrade"&gt;&lt;a class="anchor" href="#time-to-upgrade"&gt;&lt;/a&gt;Time to upgrade&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are using Hibernate Validator 6.0, you might want to upgrade to the &lt;a href="http://in.relation.to/2018/07/18/hibernate-validator-6011-final-out/"&gt;6.0.11&lt;/a&gt; version which comes with improved compatibility with JDK 11 and a couple of bug fixes.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="questions-and-answers"&gt;&lt;a class="anchor" href="#questions-and-answers"&gt;&lt;/a&gt;Questions and answers&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/association-between-independent-entities/1078"&gt;How to map an association between independent entities&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/collections-are-not-able-to-access-in-reference-variable/1082"&gt;Parent-side Hibernate collection does not contain any child record&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-fetch-one-side-of-a-many-to-many-association-while-filtering-the-other-using-hibernate/1095"&gt;How to fetch one side of a many-to-many association while filtering the other using Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-change-hibernate-schema-at-run-time/1093"&gt;How to change the Hibernate database schema at runtime&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11431670/how-can-i-avoid-the-warning-firstresult-maxresults-specified-with-collection-fe/46195656#46195656"&gt;How can I avoid the Warning “firstResult/maxResults specified with collection fetch; applying in memory!”?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/12346845/registering-a-sql-function-with-jpa-and-hibernate/51285944?stw=2#51285944"&gt;Registering a SQL function with JPA and Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/7349464/bulk-insert-or-update-with-hibernate/51324134#51324134"&gt;Bulk insert or update with Hibernate?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/25362831/solve-hibernate-lazy-init-issue-with-hibernate-enable-lazy-load-no-trans/39723142#39723142"&gt;Solve Hibernate Lazy-Init issue with hibernate.enable_lazy_load_no_trans&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/23923886/jpa-lazy-fetch-not-working-and-throwing-lazyinitializationexception/23927111#23927111"&gt;JPA lazy fetch not working and throwing LazyInitializationException&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/34588354/difference-between-size-length-and-columnlength-value/34589474#34589474"&gt;Difference between &lt;code&gt;@Size&lt;/code&gt;, &lt;code&gt;@Length&lt;/code&gt; and &lt;code&gt;@Column(length=value)&lt;/code&gt; when using JPA and Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/31725820/hql-returning-timestamp-for-given-timezone/31741171#31741171"&gt;How to return a timestamp for given timezone using HQL&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/39915906/how-to-update-only-a-part-of-all-entity-attributes-with-hibernate/39917954#39917954"&gt;How to update only a part of all entity attributes with Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/1607532/when-to-use-entitymanager-find-vs-entitymanager-getreference-with-jpa/50945279#50945279"&gt;When to use EntityManager.find() vs EntityManager.getReference() with JPA&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/U8AvdK23Ljg" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users. Articles If you want to call SQL functions from the SELECT clause of a JPQL or Criteria API queries, then you should register the function as otherwise, the entity query will not compile. For more details about the best way to register such SQL f...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-07-23T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/23/hibernate-community-newsletter-2018-14/</feedburner:origLink></entry><entry><title>Enterprise Integration for Ethereum</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4O4aBflD8js/enterprise-integration-for-ethereum.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="Ethereum" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-enterprise_integration_for_ethereum</id><updated>2018-07-24T09:21:34Z</updated><published>2018-07-21T09:02:00Z</published><content type="html">&lt;div class="graf graf--p graf-after--h3" id="da0c" name="da0c"&gt;&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/enterprise-integration-for-ethereum-fa67a1577d43" target="_blank"&gt;Medium&lt;/a&gt;. &lt;/i&gt;&lt;/div&gt;&lt;div class="graf graf--p graf-after--h3" id="da0c" name="da0c"&gt;The most popular open source Java integration library —&lt;a class="markup--anchor markup--p-anchor" data-href="http://camel.apache.org/" href="http://camel.apache.org/" rel="noopener nofollow" target="_blank"&gt; Apache Camel &lt;/a&gt;supports Ethereum’s JSON-RPC API now.&lt;/div&gt;&lt;h3&gt;The Ethereum Ecosystem&lt;/h3&gt;Ethereum is an open source, public, blockchain platform for running smart contracts. It provides a decentralized Turing-complete virtual machine that can execute scripts and a cryptocurrency used to compensate participant mining nodes for computations performed or to mitigate spam. Today, Ethereum is one of the most established and mature blockchain platforms with interests from small and large companies, nonprofit organizations and governments. There is a lot that can be said about Ethereum ecosystem and the pace it moves with. But the facts talk for themselves, Ethereum has the momentum and all the indications of a technology with a potential:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Ethereum has an order of magnitude more active &lt;b&gt;developers&lt;/b&gt; than any other blockchain platform and as dictated by the &lt;a href="https://en.wikipedia.org/wiki/Metcalfe%27s_law" title="Metcalfe's law"&gt;Metcalfe's law&lt;/a&gt;, this gap widens day by the&amp;nbsp;day. Ethereum coding school CryptoZombies has over &lt;span class="markup--strong markup--p-strong"&gt;200K users,&lt;/span&gt; Truffle development framework has over half a million &lt;a href="https://media.consensys.net/the-state-of-the-ethereum-network-949332cb6895" target="_blank"&gt;downloads&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The Ethereum platform has the richest &lt;b&gt;tools &lt;/b&gt;and&lt;b&gt; &lt;/b&gt;infrastructure ecosystem for building decentralized applications: &lt;a class="markup--anchor markup--p-anchor" data-href="http://truffleframework.com/" href="http://truffleframework.com/" rel="nofollow noopener" target="_blank"&gt;Truffle&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://infura.io/" href="https://infura.io/" rel="nofollow noopener" target="_blank"&gt;Infura&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://github.com/ethereum/web3.js/" href="https://github.com/ethereum/web3.js/" rel="nofollow noopener" target="_blank"&gt;Web3.js&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://openzeppelin.org/" href="https://openzeppelin.org/" rel="nofollow noopener" target="_blank"&gt;OpenZeppelin&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://github.com/ethereum/go-ethereum/wiki/geth" href="https://github.com/ethereum/go-ethereum/wiki/geth" rel="nofollow noopener" target="_blank"&gt;Geth&lt;/a&gt;, &lt;a href="https://github.com/paritytech/parity" target="_blank"&gt;Parity&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="http://truffleframework.com/ganache/" href="http://truffleframework.com/ganache/" rel="nofollow noopener" target="_blank"&gt;Ganache&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://metamask.io/" href="https://metamask.io/" rel="nofollow noopener" target="_blank"&gt;MetaMask&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://cryptozombies.io/" href="https://cryptozombies.io/" rel="nofollow noopener" target="_blank"&gt;CryptoZombies&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://mycrypto.com/" href="https://mycrypto.com/" rel="nofollow noopener" target="_blank"&gt;MyCrypto&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="http://etherscan.io/" href="http://etherscan.io/" rel="nofollow noopener" target="_blank"&gt;Etherscan&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md" rel="nofollow noopener" target="_blank"&gt;ERC20&lt;/a&gt; (for ICOs), etc.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;The cloud platforms &lt;/b&gt;Amazon Web Services and Microsoft Azure offer services for one-click Ethereum infrastructure deployment and management.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The Ethereum technology has the interest of &lt;b&gt;enterprise&lt;/b&gt; software companies. Customized Ethereum-based applications are being developed and experimented by financial institutions such as JPMorgan Chase,&lt;sup&gt; &lt;/sup&gt;Deloitte, R3,&lt;sup&gt; &lt;/sup&gt;Innovate UK,&amp;nbsp; Barclays, UBS, Credit Suisse and many others. One of the best known in this area is the J. P. Morgan Chase developed permissioned of Ethereum blockchain called &lt;a href="https://github.com/jpmorganchase/quorum/" target="_blank"&gt;Quorum.&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;In 2017, &lt;span class="mw-headline" id="Enterprise_Ethereum_Alliance_(EEA)"&gt;&lt;b&gt;Enterprise Ethereum Alliance &lt;/b&gt;(&lt;a href="https://entethalliance.org/" target="_blank"&gt;EEA&lt;/a&gt;) was setup up &lt;/span&gt;by various blockchain start-ups, Fortune 500 companies, research groups and others with the aim to help adoption of Ethereum based technology. It provides standards, resources for businesses to learn about Ethereum and leverage this groundbreaking technology to address specific industry use cases.&lt;/li&gt;&lt;/ul&gt;&lt;div class="mission__text"&gt;Ethereum has passed the moment when it was a hipster technology or a scientific experiment, and now it is a fundamental open source decentralization technology that enterprise companies are looking into. Talking about open source and the enterprise, I thought I also do my tiny piece of contribution to the Ethereum ecosystem and help for its adoption. Let's see what is it.&lt;/div&gt;&lt;h3&gt;Open Source Enterprise Integration&lt;/h3&gt;Ethereum is distributed and decentralized, but it is mostly a closed system with the embedded ledger, the currency, and the executing nodes. In order to be useful for the enterprise, Ethereum has to be well integrated with existing legacy and new systems. Luckily, Ethereum offers a robust and lightweight &lt;a href="http://www.jsonrpc.org/specification" rel="nofollow"&gt;JSON-RPC&lt;/a&gt; API with a good support for the JavaScript language. But in the enterprise companies, JavaScript is not the primary choice for integration, it is rather Java followed by .Net. Java is not necessary lightweight or fast evolving, but it has a huge developer community and a mature library ecosystem making it the top choice for the majority of enterprise companies. The main factor contributing to the productivity of the Java language is the reuse of existing libraries and avoiding reinventing the wheel. One of the most popular libraries enabling reuse and avoiding reinventing the wheel for integration is &lt;a href="http://camel.apache.org/" target="_blank"&gt;Apache Camel&lt;/a&gt;. Luckily, Camel happens to be my passion and a project I have been contributing for many years, so connecting the two was the most natural thing for me to do.&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-8gbuqBSBvQE/W0-j4ulPSDI/AAAAAAAALJM/QIv9OXLKCXcbc2p8nm0O6iXg7H9ZJaengCLcBGAs/s1600/Screen%2BShot%2B2018-07-18%2Bat%2B21.31.46.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img alt="Apache Camel building blocks" border="0" data-original-height="643" data-original-width="1600" height="256" src="https://2.bp.blogspot.com/-8gbuqBSBvQE/W0-j4ulPSDI/AAAAAAAALJM/QIv9OXLKCXcbc2p8nm0O6iXg7H9ZJaengCLcBGAs/s640/Screen%2BShot%2B2018-07-18%2Bat%2B21.31.46.png" title="Apache Camel building blocks" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Building blocks of Apache Camel&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;For those who are coming from a blockchain background and are not familiar with Camel, here is a very brief intro. Apache Camel is a lightweight open source integration library that is composed conceptually of three parts:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Implementations of the widely used &lt;a href="https://www.enterpriseintegrationpatterns.com/patterns/messaging/index.html"&gt;Enterprise Integration Patterns&lt;/a&gt; (EIPs). (Notice this are not &lt;span class="col-11 text-gray-dark mr-2"&gt;Ethereum Improvement Proposal that &lt;/span&gt;shares the same acronym.) EIPs provide a common notation, language and definition of the concepts in the enterprise integration space (think of publish-subscribe, dead letter channel, content-based router, filter, splitter, aggregator, throttler, retry, circuit breaker, etc.). Some of these patterns have been around for over a decade and some are new, but they are well known by anyone doing messaging and distributed system integration for a living.&lt;/li&gt;&lt;li&gt;The second major part of Apache Camel is the huge &lt;a href="https://github.com/apache/camel/tree/master/components"&gt;connectors&lt;/a&gt; library. Basically, as long as there is a Java library for a protocol, system endpoint, SaaS API, most likely there is a Camel connector for it (think of HTTP, JMS, SOAP, REST, AWS SQS, DropBox, Twitter, and now Ethereum, etc). Connectors abstract away the complexity of configuring the different libraries and provide a unified URI based approach for connecting to all kind of systems.&lt;/li&gt;&lt;li&gt;And the last piece of Apache Camel is the Domain Specific Language (DSL) that wires together connectors and EIPs in a higher level integration focused language. The DSL, combined with connectors and patterns makes developers highly productive in connecting systems and creates solutions that are industry standard and easier to maintain for long periods. All these are characteristics that are important for enterprise companies looking to create modern solutions based on mature technology.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;/ul&gt;Companies are more integrated than ever, the systems within the companies are more integrated than ever. And if you are a Java shop, most likely there is already some Apache Camel based integration in use somewhere in the organization. Now you can use Camel and all the capabilities it provides also to talk to Ethereum.&lt;br /&gt;&lt;h3&gt;Apache Camel Connector for Ethereum&lt;/h3&gt;The natural intersection of the two technologies is a Camel connector for Ethereum. Such a connector would allow integrating Ethereum with any other system, interaction style, and protocol. For that purpose, I evaluated the existing Java libraries for Ethereum and came to the conclusion that &lt;a href="http://web3j.io/" target="_blank"&gt;web3j&lt;/a&gt; is the right fit for this use case. Web3j is an actively developed, feature rich, Java library for interacting with Ethereum compatibles nodes over JSON-RPC. &lt;a href="https://github.com/apache/camel/blob/master/components/camel-web3j/src/main/docs/web3j-component.adoc" target="_blank"&gt;Camel-web3j&lt;/a&gt; connector (the technical name for the Camel Ethereum connector) is a thin wrapper that gives an easy way to use the capabilities offered by web3j from Apache Camel DSL. Currently, the connector offers the following features:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Works with &lt;a href="https://github.com/ethereum/go-ethereum" target="_blank"&gt;Geth&lt;/a&gt;, &lt;a href="https://github.com/paritytech/parity" target="_blank"&gt;Parity&lt;/a&gt;, &lt;a href="https://truffleframework.com/ganache" target="_blank"&gt;Ganache&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://infura.io/" rel="" target="_blank"&gt;Infura&lt;/a&gt; API.&lt;/li&gt;&lt;li&gt;Support for JP Morgan's &lt;a href="https://github.com/jpmorganchase/quorum/" target="_blank"&gt;Quorum&lt;/a&gt; API.&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC" target="_blank"&gt;JSON-RPC&lt;/a&gt; API over HTTP and IPC.&lt;/li&gt;&lt;li&gt;Implementation of all web3, net, eth, shh operations.&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_newfilter" target="_blank"&gt;filters&lt;/a&gt;.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://ens.domains/" rel="" target="_blank"&gt;Ethereum Name Service (ENS)&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Fully unit and integration tested (over 100 and growing).&lt;/li&gt;&lt;/ul&gt;The full power of this integration comes not from the connector features, but when the connector is used together with the other connectors, patterns and all other Camel capabilities to provide a complete integration framework around Ethereum.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-nx6QHiAdK60/W05qCPo08yI/AAAAAAAALJA/i6Ef3kgy6yYeO-Aa-oJrWCgCx7ALXcZNACLcBGAs/s1600/Screen%2BShot%2B2018-07-17%2Bat%2B22.55.13.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="675" data-original-width="1600" height="265" src="https://2.bp.blogspot.com/-nx6QHiAdK60/W05qCPo08yI/AAAAAAAALJA/i6Ef3kgy6yYeO-Aa-oJrWCgCx7ALXcZNACLcBGAs/s640/Screen%2BShot%2B2018-07-17%2Bat%2B22.55.13.png" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Ethereum compatible JSON-RPC APIs&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Next, I'm going to focus on adding support for Parity's &lt;a href="https://github.com/paritytech/parity/wiki/JSONRPC-personal-module"&gt;Personal&lt;/a&gt;, and Geth's &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal"&gt;Personal&lt;/a&gt; client API, Ethereum wallet support, and others. The aim is to keep the component up-to-date with the web3j capabilities that are useful in system-to-system integration scenarios with Apache Camel. The connector is &lt;a href="https://github.com/apache/camel/commit/ef2bbb8799b83c70b0b8c267e7da0042d59f7e3b" target="_blank"&gt;pushed&lt;/a&gt; to Apache Camel 2.22 and ready for early adopters to give it a try and provide feedback. To get started, have a look at the unit tests to discover how each operation is configured, and the integration tests to see how to connect to Ganache or Ethereum mainnet, etc. Enjoy.&lt;br /&gt;&lt;h3&gt;Use Cases for Apache Camel&lt;/h3&gt;Bellow is the Enterprise Ethereum Architecture Stack (EEAS) which represents a conceptual framework of the common layers and components of an Enterprise Ethereum (EE) application according to the client &lt;a href="https://entethalliance.org/resources/"&gt;specification&lt;/a&gt; v1.0.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Czd6QIbRsUM/W05aIPug2KI/AAAAAAAALIc/tMqi2zCPHH8AHdIKq4ifN10zozP27JbQgCLcBGAs/s1600/eea.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img alt="Enterprise Ethereum Architecture Stack" border="0" data-original-height="1253" data-original-width="1600" height="311" src="https://1.bp.blogspot.com/-Czd6QIbRsUM/W05aIPug2KI/AAAAAAAALIc/tMqi2zCPHH8AHdIKq4ifN10zozP27JbQgCLcBGAs/s400/eea.png" title="Enterprise Ethereum Architecture Stack" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Enterprise Ethereum Architecture Stack&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;If you wonder where exactly Camel fits here, Camel-web3j is part of the tooling layer as an integration library with a focus on system-to-system integration. It uses the public Ethereum JSON-RPC API, which any Enterprise Ethereum compatible implementation must support and keep backward compatible with.&lt;br /&gt;Then, Camel would primarily be used to interact with services that are external to Ethereum but trusted by the smart contracts (so-called Oracles). In a similar manner, Camel can be used to interact with Enterprise Management Systems to send alerts and metrics, report faults, change configurations, etc.&lt;br /&gt;&lt;br /&gt;The main use cases I can think of for this connector are:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Listen for new blocks, events, happening in the Ethereum network, filter, transform, enrich and publish them into other systems. For example listen for new blocks, retrieving its transactions, filter out uninteresting ones, enriching others, and process them. That can be done using Ethereum node filters capabilities, or purely with Camel, using polling consumers to query a node periodically and idempotent filters to prevent processing previously processed blocks, etc.&lt;/li&gt;&lt;li&gt;The other use case would be, to listen for events and commands coming from an enterprise system (maybe a step in the business process) and then tell the Ethereum network about it. For example, a KYC is approved or payment is received in one system, which causes Camel to talk to the second system and retrieve a user's ERC20 address and perform an Ethereum transaction.&lt;/li&gt;&lt;/ul&gt;Real world uses of Camel would involve a more complex mixture of the above scenarios ensuring high availability, resilience, replay, auditing, etc, in which Camel is really good at.&lt;br /&gt;&lt;h3&gt;Ethereum Oracle Implemented in Apache Camel&lt;/h3&gt;&lt;i&gt;"Talk is cheap. Show me the code."&lt;/i&gt; - Linus Torvalds&lt;br /&gt;&lt;br /&gt;In many occasions, smart contracts need information from the real world to operate. An oracle is, simply put, a smart contract that is able to interact with the outside world. The demonstrate the usage of Camel-web3j, I created a Camel route that represents an oracle. The route listens for &lt;i&gt;CallbackGetBTCCap&lt;/i&gt; events on a specific topic, and when such an event is received, the Camel route generates a random value and passes it to the same contract by calling &lt;i&gt;setBTCCap&lt;/i&gt; method. That is basically a "Hello world!" the Ethereum way.&lt;br /&gt;&lt;br /&gt;To trigger the event, you can call &lt;i&gt;updateBTCCap&lt;/i&gt; method on the smart contract using the following unit test:&lt;br /&gt;&lt;blockquote class="tr_bq"&gt;mvn test -Dtest=CamelOracleRouteTest#updateBTCCap&lt;/blockquote&gt;To check the current price in the contract, you can call &lt;i&gt;getBTCCap&lt;/i&gt; method on the smart contract using the following unit test:&lt;br /&gt;&lt;blockquote class="tr_bq"&gt;mvn test -Dtest=CamelOracleRouteTest#getBTCCap&lt;/blockquote&gt;Check the full instructions, the smart contract, Camel routes on &lt;a href="https://github.com/bibryam/camel-ethereum-oracle"&gt;Github&lt;/a&gt; and try it for yourself. If you use the component and have questions or feedback, if you like this and you are interested from implementing Camel connector for other blockchain projects, &lt;a href="http://www.ofbizian.com/p/about.html" target="_blank"&gt;reach out&lt;/a&gt;. Take care. eth jar: 0x6fc1bF6A69B92C444772aCE4CB040705Afd255bD&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4O4aBflD8js" height="1" width="1" alt=""/&gt;</content><summary>If you prefer, read the same post on Medium. The most popular open source Java integration library — Apache Camel supports Ethereum’s JSON-RPC API now. The Ethereum EcosystemEthereum is an open source, public, blockchain platform for running smart contracts. It provides a decentralized Turing-complete virtual machine that can execute scripts and a cryptocurrency used to compensate participant mini...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-07-21T09:02:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/07/enterprise-integration-for-ethereum.html</feedburner:origLink></entry></feed>
